module TestModule1 where
    import TestType

    typeof testThing : (t2 -> t1) -> t2 -> t2 -> ResultThing where
      typevar t1 = Thing
      typevar t2
    let testThing = |funky, x, y| -> TestType::new <| (funky(x), funky(y))
===
HirModule {
    imports: Index {
        items: Arena {
            len: 1,
            data: [
                Import {
                    segments: [],
                    last: Name(
                        "TestType",
                    ),
                },
            ],
        },
        item_ranges: ArenaMap {
            v: [
                Some(
                    29..50,
                ),
            ],
            _ty: PhantomData<la_arena::Idx<alloy_hir::hir::import::Import>>,
        },
        item_names: {
            (
                Name(
                    "TestType",
                ),
                Idx::<Scope>(0),
            ): Idx::<Import>(0),
        },
    },
    expressions: Index {
        items: Arena {
            len: 8,
            data: [
                VariableRef {
                    name: OtherModule(
                        Fqn {
                            module: NonEmpty(
                                [
                                    Name(
                                        "TestType",
                                    ),
                                ],
                            ),
                            name: Name(
                                "new",
                            ),
                        },
                    ),
                },
                VariableRef {
                    name: ThisModule(
                        Name(
                            "x",
                        ),
                    ),
                },
                FunctionCall {
                    target: ThisModule(
                        Name(
                            "funky",
                        ),
                    ),
                    args: [
                        Idx::<Expression>(1),
                    ],
                },
                VariableRef {
                    name: ThisModule(
                        Name(
                            "y",
                        ),
                    ),
                },
                FunctionCall {
                    target: ThisModule(
                        Name(
                            "funky",
                        ),
                    ),
                    args: [
                        Idx::<Expression>(3),
                    ],
                },
                Tuple(
                    NonEmpty(
                        [
                            Idx::<Expression>(2),
                            Idx::<Expression>(4),
                        ],
                    ),
                ),
                Binary {
                    op: Custom(
                        ThisModule(
                            Name(
                                "<|",
                            ),
                        ),
                    ),
                    lhs: Idx::<Expression>(0),
                    rhs: Idx::<Expression>(5),
                },
                Lambda {
                    args: [
                        Idx::<Pattern>(0),
                        Idx::<Pattern>(1),
                        Idx::<Pattern>(2),
                    ],
                    body: Idx::<Expression>(6),
                },
            ],
        },
        item_ranges: ArenaMap {
            v: [
                Some(
                    192..206,
                ),
                Some(
                    216..217,
                ),
                Some(
                    210..218,
                ),
                Some(
                    226..227,
                ),
                Some(
                    220..228,
                ),
                Some(
                    209..229,
                ),
                Some(
                    192..229,
                ),
                Some(
                    159..229,
                ),
            ],
            _ty: PhantomData<la_arena::Idx<alloy_hir::hir::expression::Expression>>,
        },
        item_names: {
            (
                Name(
                    "testThing",
                ),
                Idx::<Scope>(0),
            ): Idx::<Expression>(7),
        },
    },
    patterns: Index {
        items: Arena {
            len: 3,
            data: [
                VariableDeclaration {
                    name: ThisModule(
                        Name(
                            "funky",
                        ),
                    ),
                },
                VariableDeclaration {
                    name: ThisModule(
                        Name(
                            "x",
                        ),
                    ),
                },
                VariableDeclaration {
                    name: ThisModule(
                        Name(
                            "y",
                        ),
                    ),
                },
            ],
        },
        item_ranges: ArenaMap {
            v: [
                Some(
                    176..181,
                ),
                Some(
                    183..184,
                ),
                Some(
                    186..187,
                ),
            ],
            _ty: PhantomData<la_arena::Idx<alloy_hir::hir::pattern::Pattern>>,
        },
        item_names: {
            (
                Name(
                    "x",
                ),
                Idx::<Scope>(1),
            ): Idx::<Pattern>(1),
            (
                Name(
                    "funky",
                ),
                Idx::<Scope>(1),
            ): Idx::<Pattern>(0),
            (
                Name(
                    "y",
                ),
                Idx::<Scope>(1),
            ): Idx::<Pattern>(2),
        },
    },
    types: Index {
        items: Arena {
            len: 10,
            data: [
                Named(
                    ThisModule(
                        Name(
                            "t2",
                        ),
                    ),
                ),
                Named(
                    ThisModule(
                        Name(
                            "t1",
                        ),
                    ),
                ),
                Lambda {
                    arg_type: Idx::<Type>(0),
                    return_type: Idx::<Type>(1),
                },
                ParenthesizedType(
                    Idx::<Type>(2),
                ),
                Named(
                    ThisModule(
                        Name(
                            "t2",
                        ),
                    ),
                ),
                Named(
                    ThisModule(
                        Name(
                            "t2",
                        ),
                    ),
                ),
                Named(
                    ThisModule(
                        Name(
                            "ResultThing",
                        ),
                    ),
                ),
                Lambda {
                    arg_type: Idx::<Type>(5),
                    return_type: Idx::<Type>(6),
                },
                Lambda {
                    arg_type: Idx::<Type>(4),
                    return_type: Idx::<Type>(7),
                },
                Lambda {
                    arg_type: Idx::<Type>(3),
                    return_type: Idx::<Type>(8),
                },
            ],
        },
        item_ranges: ArenaMap {
            v: [
                Some(
                    70..73,
                ),
                Some(
                    76..78,
                ),
                Some(
                    70..78,
                ),
                Some(
                    69..80,
                ),
                Some(
                    83..86,
                ),
                Some(
                    89..92,
                ),
                Some(
                    95..107,
                ),
                Some(
                    89..107,
                ),
                Some(
                    83..107,
                ),
                Some(
                    69..107,
                ),
            ],
            _ty: PhantomData<la_arena::Idx<alloy_hir::hir::type::Type>>,
        },
        item_names: {
            (
                Name(
                    "testThing",
                ),
                Idx::<Scope>(0),
            ): Idx::<Type>(9),
        },
    },
    scopes: Scopes {
        current_scope: Idx::<Scope>(0),
        scopes: Arena {
            len: 2,
            data: [
                Scope {
                    parent: Idx::<Scope>(0),
                },
                Scope {
                    parent: Idx::<Scope>(0),
                },
            ],
        },
    },
    warnings: [],
    errors: [],
}
[]
