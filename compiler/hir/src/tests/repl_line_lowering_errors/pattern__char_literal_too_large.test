|'characters'| -> 0
===
HirModule {
    imports: EmptyIndex::<Import>,
    expressions: Index::<Expression> {
        Idx::<Expression>(0): {
            "item": Literal(
                Int(
                    0,
                ),
            ),
            "range": 18..19,
        },
        Idx::<Expression>(1): {
            "item": Lambda {
                args: [
                    Idx::<Pattern>(0),
                ],
                body: Idx::<Expression>(0),
            },
            "range": 0..19,
        },
    },
    patterns: Index::<Pattern> {
        Idx::<Pattern>(0): {
            "item": Missing,
            "range": 1..13,
        },
    },
    type_references: EmptyIndex::<TypeReference>,
    type_definitions: EmptyIndex::<TypeDefinition>,
    scopes: Scopes {
        current_scope: Idx::<Scope>(0),
        scopes: Arena {
            len: 2,
            data: [
                Scope {
                    parent: Idx::<Scope>(0),
                    tag: "root",
                },
                Scope {
                    parent: Idx::<Scope>(0),
                    tag: "lambda expression",
                },
            ],
        },
    },
    warnings: [],
    errors: [
        LoweringError {
            kind: CharLiteralInvalid,
            range: 1..13,
        },
    ],
}
[]
