let counter = 0

counter
===
HirModule {
    imports: Index {
        items: Arena {
            len: 0,
            data: [],
        },
        item_ranges: ArenaMap {
            v: [],
            _ty: PhantomData<la_arena::Idx<alloy_hir::hir::import::Import>>,
        },
        item_names: {},
    },
    expressions: Index {
        items: Arena {
            len: 2,
            data: [
                IntLiteral(
                    0,
                ),
                VariableRef {
                    name: ThisModule(
                        Name(
                            "counter",
                        ),
                    ),
                },
            ],
        },
        item_ranges: ArenaMap {
            v: [
                Some(
                    0..17,
                ),
                Some(
                    17..24,
                ),
            ],
            _ty: PhantomData<la_arena::Idx<alloy_hir::hir::expression::Expression>>,
        },
        item_names: {
            (
                Name(
                    "counter",
                ),
                Idx::<Scope>(0),
            ): Idx::<Expression>(0),
        },
    },
    patterns: Index {
        items: Arena {
            len: 0,
            data: [],
        },
        item_ranges: ArenaMap {
            v: [],
            _ty: PhantomData<la_arena::Idx<alloy_hir::hir::pattern::Pattern>>,
        },
        item_names: {},
    },
    types: Index {
        items: Arena {
            len: 0,
            data: [],
        },
        item_ranges: ArenaMap {
            v: [],
            _ty: PhantomData<la_arena::Idx<alloy_hir::hir::type::Type>>,
        },
        item_names: {},
    },
    scopes: Scopes {
        current_scope: Idx::<Scope>(0),
        scopes: Arena {
            len: 1,
            data: [
                Scope {
                    parent: Idx::<Scope>(0),
                },
            ],
        },
    },
    warnings: [],
    errors: [],
}
[]
