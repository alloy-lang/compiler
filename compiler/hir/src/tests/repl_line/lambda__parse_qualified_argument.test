|Option::None| -> x
===
HirModule {
    imports: Index {
        items: Arena {
            len: 0,
            data: [],
        },
        item_ranges: ArenaMap {
            v: [],
            _ty: PhantomData<la_arena::Idx<alloy_hir::hir::import::Import>>,
        },
        item_names: {},
    },
    expressions: Index {
        items: Arena {
            len: 2,
            data: [
                VariableRef {
                    name: ThisModule(
                        Name(
                            "x",
                        ),
                    ),
                },
                Lambda {
                    args: [
                        Idx::<Pattern>(0),
                    ],
                    body: Idx::<Expression>(0),
                },
            ],
        },
        item_ranges: ArenaMap {
            v: [
                Some(
                    18..19,
                ),
                Some(
                    0..19,
                ),
            ],
            _ty: PhantomData<la_arena::Idx<alloy_hir::hir::expression::Expression>>,
        },
        item_names: {},
    },
    patterns: Index {
        items: Arena {
            len: 1,
            data: [
                VariableRef {
                    name: OtherModule(
                        Fqn {
                            module: NonEmpty(
                                [
                                    Name(
                                        "Option",
                                    ),
                                ],
                            ),
                            name: Name(
                                "None",
                            ),
                        },
                    ),
                },
            ],
        },
        item_ranges: ArenaMap {
            v: [
                Some(
                    1..13,
                ),
            ],
            _ty: PhantomData<la_arena::Idx<alloy_hir::hir::pattern::Pattern>>,
        },
        item_names: {},
    },
    type_annotations: {},
    types: Arena {
        len: 0,
        data: [],
    },
    type_ranges: ArenaMap {
        v: [],
        _ty: PhantomData<la_arena::Idx<alloy_hir::hir::type::Type>>,
    },
    warnings: [],
    errors: [],
}
[]
[]
