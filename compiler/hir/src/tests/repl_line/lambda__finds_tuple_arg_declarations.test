|(a, b)| -> a + b
===
HirModule {
    imports: Index {
        items: Arena {
            len: 0,
            data: [],
        },
        item_ranges: ArenaMap {
            v: [],
            _ty: PhantomData<la_arena::Idx<alloy_hir::hir::import::Import>>,
        },
        item_names: {},
    },
    expressions: Index {
        items: Arena {
            len: 4,
            data: [
                VariableRef {
                    name: ThisModule(
                        Name(
                            "a",
                        ),
                    ),
                },
                VariableRef {
                    name: ThisModule(
                        Name(
                            "b",
                        ),
                    ),
                },
                Binary {
                    op: Add,
                    lhs: Idx::<Expression>(0),
                    rhs: Idx::<Expression>(1),
                },
                Lambda {
                    args: [
                        Idx::<Pattern>(2),
                    ],
                    body: Idx::<Expression>(2),
                },
            ],
        },
        item_ranges: ArenaMap {
            v: [
                Some(
                    12..14,
                ),
                Some(
                    16..17,
                ),
                Some(
                    12..17,
                ),
                Some(
                    0..17,
                ),
            ],
            _ty: PhantomData<la_arena::Idx<alloy_hir::hir::expression::Expression>>,
        },
        item_names: {},
    },
    patterns: Index {
        items: Arena {
            len: 3,
            data: [
                VariableDeclaration {
                    name: ThisModule(
                        Name(
                            "a",
                        ),
                    ),
                },
                VariableDeclaration {
                    name: ThisModule(
                        Name(
                            "b",
                        ),
                    ),
                },
                Tuple(
                    NonEmpty(
                        [
                            Idx::<Pattern>(0),
                            Idx::<Pattern>(1),
                        ],
                    ),
                ),
            ],
        },
        item_ranges: ArenaMap {
            v: [
                Some(
                    2..3,
                ),
                Some(
                    5..6,
                ),
                Some(
                    1..7,
                ),
            ],
            _ty: PhantomData<la_arena::Idx<alloy_hir::hir::pattern::Pattern>>,
        },
        item_names: {
            (
                Name(
                    "a",
                ),
                Idx::<Scope>(1),
            ): Idx::<Pattern>(0),
            (
                Name(
                    "b",
                ),
                Idx::<Scope>(1),
            ): Idx::<Pattern>(1),
        },
    },
    type_references: Index {
        items: Arena {
            len: 0,
            data: [],
        },
        item_ranges: ArenaMap {
            v: [],
            _ty: PhantomData<la_arena::Idx<alloy_hir::hir::type_reference::TypeReference>>,
        },
        item_names: {},
    },
    scopes: Scopes {
        current_scope: Idx::<Scope>(0),
        scopes: Arena {
            len: 2,
            data: [
                Scope {
                    parent: Idx::<Scope>(0),
                },
                Scope {
                    parent: Idx::<Scope>(0),
                },
            ],
        },
    },
    warnings: [],
    errors: [],
}
[]
