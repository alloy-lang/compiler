let func1 = 0
let func2 = 1

let result = >>(func1, func2)
===
HirModule {
    imports: EmptyIndex::<Import>,
    expressions: Index::<Expression> {
        Idx::<Expression>(0): {
            "item": IntLiteral(
                0,
            ),
            "name": "func1",
            "range": 0..14,
            "scope_id": Idx::<Scope>(0),
        },
        Idx::<Expression>(1): {
            "item": IntLiteral(
                1,
            ),
            "name": "func2",
            "range": 14..29,
            "scope_id": Idx::<Scope>(0),
        },
        Idx::<Expression>(2): {
            "item": VariableRef {
                name: ThisModule(
                    "func1",
                ),
            },
            "range": 45..50,
        },
        Idx::<Expression>(3): {
            "item": VariableRef {
                name: ThisModule(
                    "func2",
                ),
            },
            "range": 52..57,
        },
        Idx::<Expression>(4): {
            "item": FunctionCall {
                target: ThisModule(
                    ">>",
                ),
                args: [
                    Idx::<Expression>(2),
                    Idx::<Expression>(3),
                ],
            },
            "name": "result",
            "range": 29..58,
            "scope_id": Idx::<Scope>(0),
        },
    },
    patterns: EmptyIndex::<Pattern>,
    type_references: EmptyIndex::<TypeReference>,
    type_definitions: EmptyIndex::<TypeDefinition>,
    scopes: Scopes {
        current_scope: Idx::<Scope>(0),
        scopes: Arena {
            len: 1,
            data: [
                Scope {
                    parent: Idx::<Scope>(0),
                    tag: "root",
                },
            ],
        },
    },
    warnings: [],
    errors: [],
}
[]
