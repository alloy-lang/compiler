typeof test : Int -> String -> ()
===
HirModule {
    imports: Index {
        items: Arena {
            len: 0,
            data: [],
        },
        item_ranges: ArenaMap {
            v: [],
            _ty: PhantomData<la_arena::Idx<alloy_hir::hir::import::Import>>,
        },
        item_names: {},
    },
    expressions: Index {
        items: Arena {
            len: 0,
            data: [],
        },
        item_ranges: ArenaMap {
            v: [],
            _ty: PhantomData<la_arena::Idx<alloy_hir::hir::expression::Expression>>,
        },
        item_names: {},
    },
    patterns: Index {
        items: Arena {
            len: 0,
            data: [],
        },
        item_ranges: ArenaMap {
            v: [],
            _ty: PhantomData<la_arena::Idx<alloy_hir::hir::pattern::Pattern>>,
        },
        item_names: {},
    },
    type_annotations: {
        Name(
            "test",
        ): Idx::<Type>(4),
    },
    types: Arena {
        len: 5,
        data: [
            Named(
                ThisModule(
                    Name(
                        "Int",
                    ),
                ),
            ),
            Named(
                ThisModule(
                    Name(
                        "String",
                    ),
                ),
            ),
            Unit,
            Lambda {
                arg_type: Idx::<Type>(1),
                return_type: Idx::<Type>(2),
            },
            Lambda {
                arg_type: Idx::<Type>(0),
                return_type: Idx::<Type>(3),
            },
        ],
    },
    type_ranges: ArenaMap {
        v: [
            Some(
                14..18,
            ),
            Some(
                21..28,
            ),
            Some(
                31..33,
            ),
            Some(
                21..33,
            ),
            Some(
                14..33,
            ),
        ],
        _ty: PhantomData<la_arena::Idx<alloy_hir::hir::type::Type>>,
    },
    scopes: Scopes {
        current_scope: Idx::<Scope>(0),
        scopes: Arena {
            len: 1,
            data: [
                Scope {
                    parent: Idx::<Scope>(0),
                },
            ],
        },
    },
    warnings: [],
    errors: [],
}
[]
