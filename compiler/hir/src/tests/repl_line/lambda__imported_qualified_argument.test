import std::option::Option

|Option::None| -> 5
===
HirModule {
    imports: Index::<Import> {
        items: {
            Idx::<Import>(0): {
                "item": "Import { segments: [\"std\", \"option\"], last: \"Option\" }",
                "name": "Option",
                "range": "0..28",
            },
        },
    },
    expressions: Index::<Expression> {
        items: {
            Idx::<Expression>(0): {
                "item": "IntLiteral(5)",
                "range": "46..47",
            },
            Idx::<Expression>(1): {
                "item": "Lambda { args: [Idx::<Pattern>(0)], body: Idx::<Expression>(0) }",
                "range": "28..47",
            },
        },
    },
    patterns: Index::<Pattern> {
        items: {
            Idx::<Pattern>(0): {
                "item": "VariableRef { name: OtherModule(Fqn { module: NonEmpty([\"Option\"]), name: \"None\" }) }",
                "range": "29..41",
            },
        },
    },
    type_references: EmptyIndex::<TypeReference>,
    scopes: Scopes {
        current_scope: Idx::<Scope>(0),
        scopes: Arena {
            len: 2,
            data: [
                Scope {
                    parent: Idx::<Scope>(0),
                },
                Scope {
                    parent: Idx::<Scope>(0),
                },
            ],
        },
    },
    warnings: [],
    errors: [],
}
[]
