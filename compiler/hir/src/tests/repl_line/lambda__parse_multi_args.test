|arg1, arg2, arg3| -> 17
===
HirModule {
    imports: {},
    values: Arena {
        len: 0,
        data: [],
    },
    expressions: Arena {
        len: 2,
        data: [
            IntLiteral(
                17,
            ),
            Lambda {
                args: [
                    Idx::<Pattern>(0),
                    Idx::<Pattern>(1),
                    Idx::<Pattern>(2),
                ],
                body: Idx::<Expression>(0),
            },
        ],
    },
    expression_ranges: ArenaMap {
        v: [
            Some(
                22..24,
            ),
            Some(
                0..24,
            ),
        ],
        _ty: PhantomData<la_arena::Idx<alloy_hir::hir::expression::Expression>>,
    },
    patterns: Arena {
        len: 3,
        data: [
            VariableRef {
                name: ThisModule(
                    Name(
                        "arg1",
                    ),
                ),
            },
            VariableRef {
                name: ThisModule(
                    Name(
                        "arg2",
                    ),
                ),
            },
            VariableRef {
                name: ThisModule(
                    Name(
                        "arg3",
                    ),
                ),
            },
        ],
    },
    pattern_ranges: ArenaMap {
        v: [
            Some(
                1..5,
            ),
            Some(
                7..11,
            ),
            Some(
                13..17,
            ),
        ],
        _ty: PhantomData<la_arena::Idx<alloy_hir::hir::pattern::Pattern>>,
    },
    type_annotations: {},
    types: Arena {
        len: 0,
        data: [],
    },
    type_ranges: ArenaMap {
        v: [],
        _ty: PhantomData<la_arena::Idx<alloy_hir::hir::type::Type>>,
    },
}
[]
[]
