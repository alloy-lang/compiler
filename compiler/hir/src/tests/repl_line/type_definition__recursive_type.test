typedef List =
  | Cons List
end
===
HirModule {
    imports: EmptyIndex::<Import>,
    expressions: EmptyIndex::<Expression>,
    patterns: EmptyIndex::<Pattern>,
    type_references: Index::<TypeReference> {
        Idx::<TypeReference>(0): {
            "item": Named(
                ThisModule(
                    NonEmpty(
                        [
                            "List",
                        ],
                    ),
                ),
            ),
            "range": 24..29,
        },
    },
    type_definitions: Index::<TypeDefinition> {
        Idx::<TypeDefinition>(0): {
            "item": TypeDefinition {
                name: "List",
                kind: Single(
                    TypeDefinitionMember {
                        name: "Cons",
                        properties: [
                            Idx::<TypeReference>(0),
                        ],
                    },
                ),
            },
            "name": "List",
            "range": 0..32,
            "scope_id": Idx::<Scope>(0),
        },
    },
    scopes: Scopes {
        current_scope: Idx::<Scope>(0),
        scopes: Arena {
            len: 2,
            data: [
                Scope {
                    parent: Idx::<Scope>(0),
                    tag: "root",
                },
                Scope {
                    parent: Idx::<Scope>(0),
                    tag: "type definition",
                },
            ],
        },
    },
    warnings: [],
    errors: [],
}
[]
