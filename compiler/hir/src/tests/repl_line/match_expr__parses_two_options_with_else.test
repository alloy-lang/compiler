match test when
  | True -> 0
  | _    -> 1
===
HirModule {
    imports: {},
    values: Arena {
        len: 0,
        data: [],
    },
    expressions: Arena {
        len: 4,
        data: [
            VariableRef {
                name: ThisModule(
                    Name(
                        "test",
                    ),
                ),
            },
            IntLiteral(
                0,
            ),
            IntLiteral(
                1,
            ),
            Match {
                condition: Idx::<Expression>(0),
                targets: [],
            },
        ],
    },
    expression_ranges: ArenaMap {
        v: [
            Some(
                6..11,
            ),
            Some(
                28..32,
            ),
            Some(
                42..43,
            ),
            Some(
                0..43,
            ),
        ],
        _ty: PhantomData<la_arena::Idx<alloy_hir::hir::expression::Expression>>,
    },
    patterns: Arena {
        len: 2,
        data: [
            VariableRef {
                name: ThisModule(
                    Name(
                        "True",
                    ),
                ),
            },
            NilIdentifier,
        ],
    },
    pattern_ranges: ArenaMap {
        v: [
            Some(
                20..25,
            ),
            Some(
                34..35,
            ),
        ],
        _ty: PhantomData<la_arena::Idx<alloy_hir::hir::pattern::Pattern>>,
    },
    type_annotations: {},
    types: Arena {
        len: 0,
        data: [],
    },
    type_ranges: ArenaMap {
        v: [],
        _ty: PhantomData<la_arena::Idx<alloy_hir::hir::type::Type>>,
    },
}
[]
