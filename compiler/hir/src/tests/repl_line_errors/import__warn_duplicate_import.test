import std::functor::map
import std::functor::map

let thing = map
===
HirModule {
    imports: Index::<Import> {
        items: {
            Idx::<Import>(0): {
                "item": "Import { segments: [\"std\", \"functor\"], last: \"map\" }",
                "name": "map",
                "range": "0..25",
            },
        },
    },
    expressions: Index::<Expression> {
        items: {
            Idx::<Expression>(0): {
                "item": "VariableRef { name: ThisModule(\"map\") }",
                "name": "thing",
                "range": "51..66",
            },
        },
    },
    patterns: EmptyIndex::<Pattern>,
    type_references: EmptyIndex::<TypeReference>,
    scopes: Scopes {
        current_scope: Idx::<Scope>(0),
        scopes: Arena {
            len: 1,
            data: [
                Scope {
                    parent: Idx::<Scope>(0),
                },
            ],
        },
    },
    warnings: [
        LoweringWarning {
            kind: DuplicateImport {
                name: "map",
                first: 0..25,
                second: 25..51,
            },
            range: 25..51,
        },
    ],
    errors: [],
}
[]
