if test then 2 else 3
===
HirModule {
    imports: Index {
        items: Arena {
            len: 0,
            data: [],
        },
        item_ranges: ArenaMap {
            v: [],
            _ty: PhantomData<la_arena::Idx<alloy_hir::hir::import::Import>>,
        },
        item_names: {},
    },
    expressions: Index {
        items: Arena {
            len: 4,
            data: [
                VariableRef {
                    name: ThisModule(
                        Name(
                            "test",
                        ),
                    ),
                },
                IntLiteral(
                    2,
                ),
                IntLiteral(
                    3,
                ),
                IfThenElse {
                    condition: Idx::<Expression>(0),
                    then: Idx::<Expression>(1),
                    else_: Idx::<Expression>(2),
                },
            ],
        },
        item_ranges: ArenaMap {
            v: [
                Some(
                    3..8,
                ),
                Some(
                    13..15,
                ),
                Some(
                    20..21,
                ),
                Some(
                    0..21,
                ),
            ],
            _ty: PhantomData<la_arena::Idx<alloy_hir::hir::expression::Expression>>,
        },
        item_names: {},
    },
    patterns: Index {
        items: Arena {
            len: 0,
            data: [],
        },
        item_ranges: ArenaMap {
            v: [],
            _ty: PhantomData<la_arena::Idx<alloy_hir::hir::pattern::Pattern>>,
        },
        item_names: {},
    },
    type_annotations: {},
    types: Arena {
        len: 0,
        data: [],
    },
    type_ranges: ArenaMap {
        v: [],
        _ty: PhantomData<la_arena::Idx<alloy_hir::hir::type::Type>>,
    },
    scopes: Scopes {
        current_scope: Idx::<Scope>(0),
        scopes: Arena {
            len: 1,
            data: [
                Scope {
                    parent: Idx::<Scope>(0),
                },
            ],
        },
    },
    warnings: [],
    errors: [
        LoweringError {
            kind: UnknownReference {
                path: ThisModule(
                    Name(
                        "test",
                    ),
                ),
            },
            range: 3..8,
        },
    ],
}
[]
