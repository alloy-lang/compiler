trait TestTrait1 where
    -- imagine all the things here

    typevar t1

trait TestTrait2 where
    -- imagine all the things here

    typevar t1
end
===
HirModule {
    imports: EmptyIndex::<Import>,
    expressions: EmptyIndex::<Expression>,
    patterns: EmptyIndex::<Pattern>,
    type_references: EmptyIndex::<TypeReference>,
    type_definitions: Index::<TypeDefinition> {
        Idx::<TypeDefinition>(0): {
            "item": TypeDefinition {
                name: "t1",
                kind: TypeVariable(
                    Unbound,
                ),
            },
            "name": "t1",
            "range": 63..75,
            "scope_id": Idx::<Scope>(1),
        },
        Idx::<TypeDefinition>(1): {
            "item": TypeDefinition {
                name: "TestTrait1",
                kind: Trait(
                    Trait {
                        name: "TestTrait1",
                        self_constraints: [],
                        named_type_variables: {
                            "t1": Idx::<TypeDefinition>(0),
                        },
                        type_annotations: {},
                        values: {},
                    },
                ),
            },
            "name": "TestTrait1",
            "range": 0..75,
            "scope_id": Idx::<Scope>(0),
        },
        Idx::<TypeDefinition>(2): {
            "item": TypeDefinition {
                name: "t1",
                kind: TypeVariable(
                    Unbound,
                ),
            },
            "name": "t1",
            "range": 138..149,
            "scope_id": Idx::<Scope>(2),
        },
        Idx::<TypeDefinition>(3): {
            "item": TypeDefinition {
                name: "TestTrait2",
                kind: Trait(
                    Trait {
                        name: "TestTrait2",
                        self_constraints: [],
                        named_type_variables: {
                            "t1": Idx::<TypeDefinition>(2),
                        },
                        type_annotations: {},
                        values: {},
                    },
                ),
            },
            "name": "TestTrait2",
            "range": 75..152,
            "scope_id": Idx::<Scope>(0),
        },
    },
    scopes: Scopes {
        current_scope: Idx::<Scope>(0),
        scopes: Arena {
            len: 3,
            data: [
                Scope {
                    parent: Idx::<Scope>(0),
                    tag: "root",
                },
                Scope {
                    parent: Idx::<Scope>(0),
                    tag: "trait",
                },
                Scope {
                    parent: Idx::<Scope>(0),
                    tag: "trait",
                },
            ],
        },
    },
    warnings: [],
    errors: [],
}
[
    ParseError {
        expected: [
            EndKw,
        ],
        kind: Missing {
            offset: 75,
        },
        context: TraitEnd,
    },
]
