typeof apply : Test[t1] -> Test t2] where
    typevar t1
    typevar t2
===
SourceFile@0..71
  TypeAnnotation@0..71
    TypeOfKw@0..6 "typeof"
    Whitespace@6..7 " "
    Ident@7..12 "apply"
    Whitespace@12..13 " "
    Colon@13..14 ":"
    Whitespace@14..15 " "
    LambdaType@15..36
      BoundedType@15..24
        BoundedTypeBase@15..19
          TypeIdentifier@15..19
            Path@15..19
              Ident@15..19 "Test"
        LBracket@19..20 "["
        BoundedTypeArg@20..22
          TypeIdentifier@20..22
            Path@20..22
              Ident@20..22 "t1"
        RBracket@22..23 "]"
        Whitespace@23..24 " "
      RightArrow@24..26 "->"
      Whitespace@26..27 " "
      BoundedType@27..36
        BoundedTypeBase@27..32
          TypeIdentifier@27..32
            Path@27..32
              Ident@27..31 "Test"
              Whitespace@31..32 " "
        BoundedTypeArg@32..34
          TypeIdentifier@32..34
            Path@32..34
              Ident@32..34 "t2"
        RBracket@34..35 "]"
        Whitespace@35..36 " "
    WhereKw@36..41 "where"
    Whitespace@41..46 "\n    "
    NamedTypeVariable@46..61
      TypevarKw@46..53 "typevar"
      Whitespace@53..54 " "
      Ident@54..56 "t1"
      Whitespace@56..61 "\n    "
    NamedTypeVariable@61..71
      TypevarKw@61..68 "typevar"
      Whitespace@68..69 " "
      Ident@69..71 "t2"
error at position 32 while parsing the `[` at the start of the bounded type arguments. Missing expected ‘[’
